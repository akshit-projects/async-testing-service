GET     /api/v1/flows                           ab.async.tester.controllers.FlowsController.getFlows(orgId: Option[String])
POST    /api/v1/flows                          ab.async.tester.controllers.FlowsController.addFlow()
PUT     /api/v1/flows                          ab.async.tester.controllers.FlowsController.updateFlow()
POST    /api/v1/flows/run                      ab.async.tester.controllers.FlowsController.runFlow()
POST    /api/v1/flows/validate                 ab.async.tester.controllers.FlowsController.validateFlow()
GET     /api/v1/flows/:id                      ab.async.tester.controllers.FlowsController.getFlow(id: String)
GET     /api/v1/flows/:flowId/versions         ab.async.tester.controllers.FlowsController.getFlowVersions(flowId: String)
GET     /api/v1/flows/:flowId/versions/:version ab.async.tester.controllers.FlowsController.getFlowVersion(flowId: String, version: Int)

# Execution endpoints
GET     /api/v1/executions                     ab.async.tester.controllers.ExecutionController.getExecutions()
GET     /api/v1/executions/:executionId        ab.async.tester.controllers.ExecutionController.getExecution(executionId: String)
GET     /api/v1/executions/:executionId/stream ab.async.tester.controllers.ExecutionController.streamExecution(executionId: String, clientId: Option[String])

# Test Suite endpoints
GET     /api/v1/test-suites                    ab.async.tester.controllers.TestSuiteController.getTestSuites
POST    /api/v1/test-suites                    ab.async.tester.controllers.TestSuiteController.createTestSuite()
PUT     /api/v1/test-suites                    ab.async.tester.controllers.TestSuiteController.updateTestSuite()
DELETE  /api/v1/test-suites/:id                ab.async.tester.controllers.TestSuiteController.deleteTestSuite(id: String)
POST    /api/v1/test-suites/run                ab.async.tester.controllers.TestSuiteController.runTestSuite()
POST    /api/v1/test-suites/validate           ab.async.tester.controllers.TestSuiteController.validateTestSuite()
GET     /api/v1/test-suites/:id                ab.async.tester.controllers.TestSuiteController.getTestSuite(id: String)

# Test Suite Execution endpoints
GET     /api/v1/test-suite-executions          ab.async.tester.controllers.TestSuiteController.getTestSuiteExecutions()
GET     /api/v1/test-suite-executions/:id      ab.async.tester.controllers.TestSuiteController.getTestSuiteExecution(id: String)

# Organisation endpoints
GET     /api/v1/organisations                  ab.async.tester.controllers.OrganisationsController.getOrganisations(search: Option[String] ?= None, limit: Option[Int] ?= None, page: Option[Int] ?= None)
POST    /api/v1/organisations                  ab.async.tester.controllers.OrganisationsController.createOrganisation()
GET     /api/v1/organisations/:id              ab.async.tester.controllers.OrganisationsController.getOrganisation(id: String)
PUT     /api/v1/organisations/:id              ab.async.tester.controllers.OrganisationsController.updateOrganisation(id: String)
DELETE  /api/v1/organisations/:id              ab.async.tester.controllers.OrganisationsController.deleteOrganisation(id: String)

# Team endpoints
GET     /api/v1/teams                          ab.async.tester.controllers.TeamsController.getTeams(search: Option[String] ?= None, orgId: Option[String] ?= None, limit: Option[Int] ?= None, page: Option[Int] ?= None)
POST    /api/v1/teams                          ab.async.tester.controllers.TeamsController.createTeam()
GET     /api/v1/teams/:id                      ab.async.tester.controllers.TeamsController.getTeam(id: String)
PUT     /api/v1/teams/:id                      ab.async.tester.controllers.TeamsController.updateTeam(id: String)
DELETE  /api/v1/teams/:id                      ab.async.tester.controllers.TeamsController.deleteTeam(id: String)
GET     /api/v1/organisations/:orgId/teams     ab.async.tester.controllers.TeamsController.getTeamsByOrganisation(orgId: String)

# Resource endpoints
GET     /api/v1/resources          ab.async.tester.controllers.ResourceController.getResources
GET     /api/v1/resources/:id      ab.async.tester.controllers.ResourceController.getResource(id: String)
POST    /api/v1/resources          ab.async.tester.controllers.ResourceController.createResource
PUT     /api/v1/resources          ab.async.tester.controllers.ResourceController.updateResource
DELETE  /api/v1/resources/:id      ab.async.tester.controllers.ResourceController.deleteResource(id: String)

# Metrics endpoint
GET     /metrics                   ab.async.tester.controllers.MetricsController.metrics

# Auth endpoints
POST     /api/v1/login                   ab.async.tester.controllers.AuthController.loginUser
GET      /api/v1/profile                 ab.async.tester.controllers.AuthController.getUserProfile
PUT      /api/v1/profile                 ab.async.tester.controllers.AuthController.updateUserProfile()

# Admin endpoints
PUT      /api/v1/admin/users             ab.async.tester.controllers.AuthController.adminUpdateUser
